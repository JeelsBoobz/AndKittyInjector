name: Build Android NDK Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository (with submodules)
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Get submodule SHA before update
      id: submodule-before
      run: |
        echo "sha=$(git submodule status | awk '{print $1}')" >> $GITHUB_OUTPUT

    - name: Update submodules to latest commit in main
      run: |
        git submodule update --remote --merge

    - name: Get submodule SHA after update
      id: submodule-after
      run: |
        echo "sha=$(git submodule status | awk '{print $1}')" >> $GITHUB_OUTPUT

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Download and set up Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c

    - name: Build for armeabi-v7a
      run: |
        cmake -S AndKittyInjector -B build-armeabi-v7a \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=armeabi-v7a \
          -DANDROID_PLATFORM=android-21
        cmake --build build-armeabi-v7a --config Release

    - name: Build for arm64-v8a
      run: |
        cmake -S AndKittyInjector -B build-arm64-v8a \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21
        cmake --build build-arm64-v8a --config Release

    - name: Prepare build artifacts
      run: |
        mkdir artifacts
        find build-armeabi-v7a -type f -executable -exec cp {} artifacts/ \;
        find build-arm64-v8a -type f -executable -exec cp {} artifacts/ \;

    - name: Check if submodule is updated
      id: check-submodule
      run: |
        if [ "${{ steps.submodule-before.outputs.sha }}" != "${{ steps.submodule-after.outputs.sha }}" ]; then
          echo "updated=true" >> $GITHUB_OUTPUT
        else
          echo "updated=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Release if submodule updated
      if: steps.check-submodule.outputs.updated == 'true'
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: submodule-update-$(date +%Y%m%d%H%M%S)
        name: "Automated Release - Submodule Updated"
        draft: true
        body: |
          This release was automatically created because the submodule was updated to a new commit.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts to Release if submodule updated
      if: steps.check-submodule.outputs.updated == 'true'
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/*
        tag_name: ${{ steps.create_release.outputs.tag_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
